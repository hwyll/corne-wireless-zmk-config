/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Higher number layers take precedence and override below
#define DFLT 0

// Custom layers (i.e. task specific)
#define RNAVI 1
#define LNAVI 2

// Base layers which should always be accessible (i.e. num, navi, adjs)
#define BASE 3 // same as DFLT except for thumbs, used to override DFLT keys onto custom layers
#define NUMS 4 // numbers layer - numbers, symbols
#define NAVI 5 // navigation layer - arrow keys, media controls
#define ADJS 6 // adjustment layer - layer, bt controls

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";

        // nums + navi = adjs
        nums_navi_adjs_layer {
            if-layers = <NUMS NAVI>;
            then-layer = <ADJS>;
        };

        // nums + base = adjs
        nums_base_adjs_layer {
            if-layers = <NUMS BASE>;
            then-layer = <ADJS>;
        };
    };

    // Tap Dance
    behaviors {
        // double-tap LSHIFT to turn on CAPS WORD
        td_caps: td_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
        // double-tap ` to ESC
        td_gresc: tap_dance_gresc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp GRAVE>, <&kp ESC>;
        };

    };

    combos {
        compatible = "zmk,combos";
        // tab q = ESC
        esc {
            timeout-ms = <25>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        // p bksp = DEL
        del {
            timeout-ms = <25>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        // qe = ALT+F4
        altf4 {
            timeout-ms = <25>;
            key-positions = <1 3>;
            bindings = <&kp LA(F4)>;
        };


        // io = (
        lpar {
            timeout-ms = <25>;
            key-positions = <8 9>;
            bindings = <&kp LPAR>;
        };
        // op = )
        rpar {
            timeout-ms = <25>;
            key-positions = <9 10>;
            bindings = <&kp RPAR>;
        };

        // kl = [
        lbkt {
            timeout-ms = <25>;
            key-positions = <20 21>;
            bindings = <&kp LBKT>;
        };
        // l; = ]
        rbkt {
            timeout-ms = <25>;
            key-positions = <21 22>;
            bindings = <&kp RBKT>;
        };

        // ,. = {
        lbrc {
            timeout-ms = <25>;
            key-positions = <32 33>;
            bindings = <&kp LBRC>;
        };
        // ./ = }
        rbrc {
            timeout-ms = <25>;
            key-positions = <33 34>;
            bindings = <&kp RBRC>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        // default layer

        dflt {
            // ------------------------------------------------------------------------------------------
            // |      TAB|  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U  |  I  |  O  |  P  | BSPC    |
            // |    LCTRL|  A  |  S  |  D  |  F  |  G  |        |  H  |  J  |  K  |  L  |  ;  |  '      |
            // |    LSHFT|  Z  |  X  |  C  |  V  |  B  |        |  N  |  M  |  ,  |  .  |  /  |  \      |
            //                | LALT | LGUI | NUMS SPC |        | NAVI ENT | SHFT CAPS | ` ESC |

            bindings = <
                &kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSPC
                &kp LCTRL  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
                &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                          &kp LALT  &kp LGUI  &lt NUMS SPACE        &lt NAVI RET  &td_caps  &td_gresc
            >;
        };

        // custom layers


        rnavi {
            // -----------------------------------------------------------------------------------------
            // |         |     |     |     |     |     |        |     |     | UP  |     |     |        |
            // |         |     |     |     |     |     |        |     | LFT | DWN | RGT |     |        |      
            // |         |     |     |     |     |     |        |     |     |     |     |     |        |
            //                       |     |     |     |        |     |     |     |

            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans    &kp UP    &trans     &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans    &trans    &trans     &trans  &trans
                                        &trans  &trans  &trans        &lt BASE RET  &trans  &trans
            >;
        };

        lnavi {
            // -----------------------------------------------------------------------------------------
            // |         |     | UP  |     |     |     |        |     |     |     |     |     |        |
            // |         | LFT | DWN | RGT |     |     |        |     |     |     |     |     |        |      
            // |         |     |     |     |     |     |        |     |     |     |     |     |        |
            //                       |     |     |     |        |     |     |     |

            bindings = <
                &trans  &trans    &kp UP    &trans     &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans    &trans    &trans     &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans     &trans  &trans        &lt BASE RET  &trans  &trans
            >;
        };

        // base layers

        base {
            // ------------------------------------------------------------------------------------------
            // |      TAB|  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U  |  I  |  O  |  P  | BSPC    |
            // |    LCTRL|  A  |  S  |  D  |  F  |  G  |        |  H  |  J  |  K  |  L  |  ;  |  '      |
            // |    LSHFT|  Z  |  X  |  C  |  V  |  B  |        |  N  |  M  |  ,  |  .  |  /  |  \      |
            //                | LALT | LGUI | NUMS SPC |        | NAVI ENT | SHFT CAPS | ` ESC |

            bindings = <
                &kp TAB       &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSPC
                &kp LCTRL     &kp A  &kp S  &kp D  &kp F  &kp G        &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
                &kp LSHFT     &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                                         &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };

        nums {
            // -----------------------------------------------------------------------------------------
            // |         |  1! |  2@ |  3# |  4$ |  5% |        |  6^ |  7& |  8* |  9( |  0) |     |
            // |   F1    | F2  | F3  | F4  | F5  | F6  |        |     |  -_ |  =+ |  [{ |  ]} |  '" |
            // |   F7    | F8  | F9  | F10 | F11 | F12 |        |     |     |  ,< |  .> |  /? |  \| |
            //                       |     |     |     |        |     |     |     |
  
            bindings = <
                &trans  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5          &kp N6   &kp N7     &kp N8     &kp N9    &kp N0    &trans
                &kp F1  &kp F2    &kp F3  &kp F4    &kp F5    &kp F6          &trans   &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &trans 
                &kp F7  &kp F8    &kp F9  &kp F10   &kp F11   &kp F12         &trans   &trans     &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
                                          &trans    &trans    &trans          &trans   &trans     &trans
            >;
        };

        navi {
            // -----------------------------------------------------------------------------------------
            // |         |     |PG_DN| UP  |PG_UP|     |        |     |PG_DN| UP  |PG_UP|     |      |
            // |         |     | LFT | DWN | RGT |     |        |     | LFT | DWN | RGT |     |      |
            // |         |     |     |     |     |     |        |     |  PP |MUTE |VOLDN|VOLUP|      |
            //                       |     |     |     |        |     |     |     |

            bindings = <
                &trans  &trans  &kp PG_DN  &kp UP    &kp PG_UP  &trans      &trans  &kp PG_DN  &kp UP      &kp PG_UP     &trans        &trans
                &trans  &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &trans      &trans  &kp LEFT   &kp DOWN    &kp RIGHT     &trans        &trans
                &trans  &trans  &trans     &trans    &trans     &trans      &trans  &kp K_PP   &kp K_MUTE  &kp K_VOL_DN  &kp K_VOL_UP  &trans
                                                &trans  &trans  &trans      &trans  &trans  &trans
            >;
        };

        adjs {
            // -----------------------------------------------------------------------------------------
            // |         |     |     |     |     |     |        |     |     |     |     |     |        |  
            // |         |     |     |     |     |     |        |     |     |     |     |     |        |      
            // |         |LNAVI|RNAVI|     |     | DFLT|        | BT1 | BT2 | BT3 | BT4 | BT5 | BT_CLR |
            //                       |     |     |     |        |     |     |     |

            bindings = <
                &trans  &trans     &trans     &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans        &trans
                &trans  &trans     &trans     &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans        &trans
                &trans  &to LNAVI  &to RNAVI  &trans  &trans  &to DFLT      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                              &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };


    
    };
};
